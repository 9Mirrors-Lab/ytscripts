import React from "react";nimport { CheckCircle, Clock, TrendingUp, Zap } from "lucide-react";nimport { Badge } from "@/components/ui/badge";nimport { PlaybookStep } from "./PlaybookTemplate";nninterface ModernStepGuideProps {n  steps: PlaybookStep[];n  title: string;n}nnexport const ModernStepGuide: React.FC<ModernStepGuideProps> = ({ steps, title }) => {n  const getDifficultyColor = (difficulty: string) => {n    switch (difficulty) {n      case "Beginner":n        return "bg-green-600";n      case "Intermediate":n        return "bg-yellow-600";n      case "Advanced":n        return "bg-red-600";n      default:n        return "bg-gray-600";n    }n  };nn  return (n    <div className="bg-gray-800/30 rounded-lg border border-gray-700 p-6">n      <h3 className="text-xl font-semibold text-white mb-6 flex items-center gap-2">n        <TrendingUp className="h-5 w-5 text-purple-400" />n        {title}n      </h3>n      n      <div className="space-y-4">n        {steps.map((step, index) => (n          <div key={index} className="relative">n            {/* Step Number */}n            <div className="absolute left-0 top-0 w-8 h-8 bg-gradient-to-r from-purple-600 to-blue-600 rounded-full flex items-center justify-center text-white font-bold text-sm">n              {index + 1}n            </div>n            n            {/* Step Content */}n            <div className="ml-12 space-y-3">n              <div className="flex items-start justify-between">n                <h4 className="text-lg font-medium text-white">{step.title}</h4>n                <div className="flex items-center gap-2">n                  {step.difficulty && (n                    <Badge className={getDifficultyColor(step.difficulty)}>n                      {step.difficulty}n                    </Badge>n                  )}n                  {step.duration && (n                    <Badge variant="outline" className="border-gray-500/30 text-gray-300">n                      <Clock className="h-3 w-3 mr-1" />n                      {step.duration}n                    </Badge>n                  )}n                </div>n              </div>n              n              <p className="text-gray-300 leading-relaxed">{step.description}</p>n              n              {/* Tools */}n              {step.tools && step.tools.length > 0 && (n                <div className="flex flex-wrap gap-2">n                  {step.tools.map((tool, toolIndex) => (n                    <Badge key={toolIndex} variant="secondary" className="text-xs">n                      <Zap className="h-3 w-3 mr-1" />n                      {tool}n                    </Badge>n                  ))}n                </div>n              )}n              n              {/* Tips */}n              {step.tips && step.tips.length > 0 && (n                <div className="bg-gray-700/30 rounded-lg p-3">n                  <div className="flex items-center gap-2 mb-2">n                    <CheckCircle className="h-4 w-4 text-green-400" />n                    <span className="text-sm font-medium text-green-300">Pro Tips</span>n                  </div>n                  <ul className="space-y-1">n                    {step.tips.map((tip, tipIndex) => (n                      <li key={tipIndex} className="text-xs text-gray-300 flex items-start gap-2">n                        <span className="text-purple-400 mt-1">â€¢</span>n                        {tip}n                      </li>n                    ))}n                  </ul>n                </div>n              )}n            </div>n          </div>n        ))}n      </div>n    </div>n  );n};