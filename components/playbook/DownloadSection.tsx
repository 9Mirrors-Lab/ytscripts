import React from "react";nimport { Download, FileText, Share2, Copy } from "lucide-react";nimport { Button } from "@/components/ui/button";nimport { PlaybookData } from "./PlaybookTemplate";nninterface DownloadSectionProps {n  playbookData: PlaybookData;n  prefix?: string;n}nnexport const DownloadSection: React.FC<DownloadSectionProps> = ({ playbookData, prefix }) => {n  const handleDownloadPDF = async () => {n    try {n      // This would typically call your PDF generation functionn      console.log("Downloading PDF...");n      // For now, just show a messagen      alert("PDF download functionality would be implemented here");n    } catch (error) {n      console.error("Error downloading PDF:", error);n    }n  };nn  const handleShare = async () => {n    try {n      const shareData = {n        title: playbookData.title,n        text: playbookData.overview,n        url: window.location.href,n      };nn      if (navigator.share) {n        await navigator.share(shareData);n      } else {n        // Fallback: copy to clipboardn        await navigator.clipboard.writeText(window.location.href);n        alert("Link copied to clipboard!");n      }n    } catch (error) {n      console.error("Error sharing:", error);n    }n  };nn  const handleCopyContent = async () => {n    try {n      const content = JSON.stringify(playbookData, null, 2);n      await navigator.clipboard.writeText(content);n      alert("Playbook content copied to clipboard!");n    } catch (error) {n      console.error("Error copying content:", error);n    }n  };nn  return (n    <div className="bg-gray-800/30 rounded-lg border border-gray-700 p-4">n      <h3 className="text-lg font-semibold text-white mb-4">Export & Share</h3>n      n      <div className="space-y-3">n        <Buttonn          onClick={handleDownloadPDF}n          className="w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700"n          size="sm"n        >n          <Download className="h-4 w-4 mr-2" />n          Download PDFn        </Button>n        n        <Buttonn          onClick={handleShare}n          variant="outline"n          className="w-full border-purple-500/30 hover:bg-purple-900/30"n          size="sm"n        >n          <Share2 className="h-4 w-4 mr-2" />n          Share Playbookn        </Button>n        n        <Buttonn          onClick={handleCopyContent}n          variant="outline"n          className="w-full border-gray-500/30 hover:bg-gray-700/30"n          size="sm"n        >n          <Copy className="h-4 w-4 mr-2" />n          Copy Contentn        </Button>n      </div>n      n      {prefix && (n        <div className="mt-4 pt-4 border-t border-gray-700">n          <p className="text-xs text-gray-400">n            Generated from: <span className="text-purple-300">{prefix}</span>n          </p>n        </div>n      )}n    </div>n  );n};